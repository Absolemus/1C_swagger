#Область ПрограммныйИнтерфейс
&Вместо("СведенияОВнешнейОбработке")
Функция uAPIСведенияОВнешнейОбработке(ВерсияБСП)
	ПараметрыРегистрации = ПродолжитьВызов(ВерсияБСП); 
	РеквизитыТабличнойЧасти = Метаданные.Справочники.ДополнительныеОтчетыИОбработки.ТабличныеЧасти.Команды.Реквизиты;	
	ПараметрыРегистрации.Команды.Колонки.Добавить("Метод", РеквизитыТабличнойЧасти.Метод.Тип);
	ПараметрыРегистрации.Команды.Колонки.Добавить("Префикс", РеквизитыТабличнойЧасти.Префикс.Тип);
	
	Возврат ПараметрыРегистрации;
КонецФункции

&ИзменениеИКонтроль("ПодключитьВнешнююОбработку")
Функция uAPIПодключитьВнешнююОбработку(Ссылка)

	СтандартнаяОбработка = Истина;
	Результат = Неопределено;

	ИнтеграцияПодсистемБСП.ПриПодключенииВнешнейОбработки(Ссылка, СтандартнаяОбработка, Результат);
	Если Не СтандартнаяОбработка Тогда
		Возврат Результат;
	КонецЕсли;

	// Проверка корректности переданных параметров.
	Если ТипЗнч(Ссылка) <> Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки") 
		Или Ссылка = Справочники.ДополнительныеОтчетыИОбработки.ПустаяСсылка() Тогда
		Возврат Неопределено;
	КонецЕсли;

	// Подключение
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ИмяОбработки = ПолучитьИмяВременногоФайла();
		ХранилищеОбработки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ХранилищеОбработки");
		ДвоичныеДанные = ХранилищеОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяОбработки);
		Возврат ИмяОбработки;
	#КонецЕсли

	Вид = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Вид");
	Если Вид = Перечисления.ВидыДополнительныхОтчетовИОбработок.Отчет
		Или Вид = Перечисления.ВидыДополнительныхОтчетовИОбработок.ДополнительныйОтчет Тогда
		Менеджер = ВнешниеОтчеты;
	Иначе
		Менеджер = ВнешниеОбработки;
	КонецЕсли;

	ПараметрыЗапуска = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "БезопасныйРежим, ХранилищеОбработки");
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ПараметрыЗапуска.ХранилищеОбработки.Получить());

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПрофилиБезопасности") Тогда
		МодульРаботаВБезопасномРежиме = ОбщегоНазначения.ОбщийМодуль("РаботаВБезопасномРежиме");
		ИспользуютсяПрофилиБезопасности = МодульРаботаВБезопасномРежиме.ИспользуютсяПрофилиБезопасности();
	Иначе
		ИспользуютсяПрофилиБезопасности = Ложь;
	КонецЕсли;

	Если ИспользуютсяПрофилиБезопасности Тогда

		МодульРаботаВБезопасномРежимеСлужебный = ОбщегоНазначения.ОбщийМодуль("РаботаВБезопасномРежимеСлужебный");
		БезопасныйРежим = МодульРаботаВБезопасномРежимеСлужебный.РежимПодключенияВнешнегоМодуля(Ссылка);

		Если БезопасныйРежим = Неопределено Тогда
			БезопасныйРежим = Истина;
		КонецЕсли;

	Иначе

		БезопасныйРежим = ПолучитьФункциональнуюОпцию("СтандартныеПодсистемыВМоделиСервиса") Или ПараметрыЗапуска.БезопасныйРежим;

		Если БезопасныйРежим Тогда
			ЗапросРазрешений = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ДополнительныеОтчетыИОбработкиРазрешения.НомерСтроки,
			|	ДополнительныеОтчетыИОбработкиРазрешения.ВидРазрешения
			|ИЗ
			|	Справочник.ДополнительныеОтчетыИОбработки.Разрешения КАК ДополнительныеОтчетыИОбработкиРазрешения
			|ГДЕ
			|	ДополнительныеОтчетыИОбработкиРазрешения.Ссылка = &Ссылка");
			ЗапросРазрешений.УстановитьПараметр("Ссылка", Ссылка);
			ЕстьРазрешений = Не ЗапросРазрешений.Выполнить().Пустой();

			РежимСовместимости = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "РежимСовместимостиРазрешений");
			Если РежимСовместимости = Перечисления.РежимыСовместимостиРазрешенийДополнительныхОтчетовИОбработок.Версия_2_2_2
				И ЕстьРазрешений Тогда
				БезопасныйРежим = Ложь;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

	ЗаписатьПримечание(Ссылка, 
	СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Подключение, %1 = ""%2"".'"), "БезопасныйРежим", БезопасныйРежим));
	#Вставка
	Если Ссылка.Публикация = Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.РежимОтладки Тогда
		Попытка
			ОбработкаОбъект = Менеджер.Создать(Ссылка.ПутьДоФайла + "\" + Ссылка.ИмяФайла, Ложь, ОбщегоНазначения.ОписаниеЗащитыБезПредупреждений());
		Исключение
			Представление = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ВызватьИсключение Представление;
		КонецПопытки;
		
		ИмяОбработки = ОбработкаОбъект.Метаданные().Имя;
	Иначе
	#КонецВставки
	ИмяОбработки = Менеджер.Подключить(АдресВоВременномХранилище, , БезопасныйРежим,
	ОбщегоНазначения.ОписаниеЗащитыБезПредупреждений());
	#Вставка
	КонецЕсли;
	#КонецВставки
	Возврат ИмяОбработки;

КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&Вместо("ПолучитьВидОбработкиПоСтроковомуПредставлениюВида")
Функция uAPIПолучитьВидОбработкиПоСтроковомуПредставлениюВида(СтроковоеПредставление)
	Если СтроковоеПредставление = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиHTTPСервис() Тогда
		Возврат Перечисления.ВидыДополнительныхОтчетовИОбработок.HTTPСервис;	
	Иначе
		Возврат ПродолжитьВызов(СтроковоеПредставление);
	КонецЕсли;
КонецФункции

&Вместо("ВыполнитьКомандуВнешнегоОбъекта")
Функция uAPIВыполнитьКомандуВнешнегоОбъекта(ВнешнийОбъект, ИдентификаторКоманды, ПараметрыКоманды, АдресРезультата)
 	РезультатИзменен = Ложь;
	Результат = ПродолжитьВызов(ВнешнийОбъект, ИдентификаторКоманды, ПараметрыКоманды, АдресРезультата);  
	
	СведенияОВнешнемОбъекте = ВнешнийОбъект.СведенияОВнешнейОбработке(); // см. СведенияОВнешнейОбработке
	
	ВидОбработки = ПолучитьВидОбработкиПоСтроковомуПредставлениюВида(СведенияОВнешнемОбъекте.Вид);
	
	ПередаватьПараметры = (
		СведенияОВнешнемОбъекте.Свойство("ВерсияБСП")
		И ОбщегоНазначенияКлиентСервер.СравнитьВерсии(СведенияОВнешнемОбъекте.ВерсияБСП, "1.2.1.4") >= 0);
	
	РезультатВыполнения = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыКоманды, "РезультатВыполнения");
	Если ТипЗнч(РезультатВыполнения) <> Тип("Структура") Тогда
		ПараметрыКоманды.Вставить("РезультатВыполнения", Новый Структура());
	КонецЕсли;

    Если ВидОбработки = Перечисления.ВидыДополнительныхОтчетовИОбработок.HTTPСервис Тогда  

		РезультатИзменен = Истина;
		
		Если ПараметрыКоманды.ЭтоЗапросДокументации Тогда 
			ДанныеСервиса.УстановитьДанныеСервиса(ВнешнийОбъект, ПараметрыКоманды);
		Иначе
			ВыполнитьКомандуHTTPСервиса(
				ВнешнийОбъект,
				ИдентификаторКоманды,
				ПараметрыКоманды
			);
		КонецЕсли;

	КонецЕсли; 
	
	Если РезультатИзменен Тогда

		Если ТипЗнч(АдресРезультата) = Тип("Строка") И ЭтоАдресВременногоХранилища(АдресРезультата) Тогда
			ПоместитьВоВременноеХранилище(ПараметрыКоманды.РезультатВыполнения, АдресРезультата);
		КонецЕсли; 
		
		Результат = ПараметрыКоманды.РезультатВыполнения;
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции 

Процедура ВыполнитьКомандуHTTPСервиса(ВнешнийОбъект, Знач ИдентификаторКоманды, ПараметрыКоманды)
	Ответ = ВнешнийОбъект.ВыполнитьКоманду(ИдентификаторКоманды, ПараметрыКоманды);
	ПараметрыКоманды.РезультатВыполнения.Вставить("HTTPОтвет", Ответ);
КонецПроцедуры  
#КонецОбласти